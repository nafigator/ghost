name: Image

permissions:
  contents: read
  security-events: write
  actions: read

on:
  workflow_dispatch:

  push:
    tags:
      - "v*.*.*"

env:
  IMAGE_REF: 'nafigat0r/ghost'

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3.4.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up vars
        run: |
          echo "IMAGE_TAG=$(git tag --sort=version:refname | tail -n1 | sed -e 's/v//')" >> $GITHUB_ENV
          echo "REVISION=$(git log -n 1 --format=%h)" >> $GITHUB_ENV

      - name: Build image
        run: |
          echo "Build tag $IMAGE_TAG"
          make image
          docker image tag ${{ env.IMAGE_REF }}:${{ env.IMAGE_TAG }} ${{ env.IMAGE_REF }}:latest

      - name: Set up build time
        run: |
          echo "BUILD_TIME=$(docker inspect ${{ env.IMAGE_REF }}:${{ env.IMAGE_TAG }} | grep -oP '(?<=Created\": \")[^\"]*')" >> $GITHUB_ENV

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 #v0.31.0
        with:
          image-ref: ${{ env.IMAGE_REF }}:latest
          exit-code: 1
          format: sarif
          output: trivy-results.sarif
          ignore-unfixed: true
          scan-type: image
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload trivy SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3.28.15
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: trivy-results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: trivy

      - name: Push image
        run: |
          docker push ${{ env.IMAGE_REF }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_REF }}:latest

      - name: Crane setup
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4
        with:
          version: v0.20.5

      - name: Annotate
        run: |
          crane mutate \
            --annotation "org.opencontainers.image.revision=${{ env.REVISION }}" \
            --annotation "org.opencontainers.image.created=${{ env.BUILD_TIME }}" \
            --annotation "org.opencontainers.image.title=ghost" \
            --annotation "org.opencontainers.image.ref.name=${{ env.IMAGE_TAG }}" \
            --annotation "org.opencontainers.image.version=${{ env.IMAGE_TAG }}" \
            --annotation "org.opencontainers.image.description=Go Hi-level Open Service Templater. Utility for creating Go microservice template in a workdir." \
            --annotation "org.opencontainers.image.authors=alex@itvault.info" \
            --annotation "org.opencontainers.image.vendor=Alexander Yancharuk" \
            --annotation "org.opencontainers.image.licenses=MIT" \
            --annotation "org.opencontainers.image.url=https://github.com/nafigator/ghost/blob/${{ env.REVISION }}/README.md" \
            --annotation "org.opencontainers.image.source=https://github.com/nafigator/ghost/blob/${{ env.REVISION }}/.docker/Dockerfile" \
            ${{ env.IMAGE_REF }}:${{ env.IMAGE_TAG }}
          crane mutate \
            --annotation "org.opencontainers.image.revision=${{ env.REVISION }}" \
            --annotation "org.opencontainers.image.created=${{ env.BUILD_TIME }}" \
            --annotation "org.opencontainers.image.title=ghost" \
            --annotation "org.opencontainers.image.ref.name=${{ env.IMAGE_TAG }}" \
            --annotation "org.opencontainers.image.version=${{ env.IMAGE_TAG }}" \
            --annotation "org.opencontainers.image.description=Go Hi-level Open Service Templater. Utility for creating Go microservice template in a workdir." \
            --annotation "org.opencontainers.image.authors=alex@itvault.info" \
            --annotation "org.opencontainers.image.vendor=Alexander Yancharuk" \
            --annotation "org.opencontainers.image.licenses=MIT" \
            --annotation "org.opencontainers.image.url=https://github.com/nafigator/ghost/blob/${{ env.REVISION }}/README.md" \
            --annotation "org.opencontainers.image.source=https://github.com/nafigator/ghost/blob/${{ env.REVISION }}/.docker/Dockerfile" \
            ${{ env.IMAGE_REF }}:latest
