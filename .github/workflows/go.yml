# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: read
  security-events: write
  actions: read

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '29 6 * * *'

env:
  GOLANGCI_LINT_VERSION: 'v2.5.0'
  TRIVY_VERSION: '0.67.2'
  GOVULNCHECK_VERSION: 'v1.1.4'

jobs:
  spelling:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Spell Check Repo
        uses: crate-ci/typos@b1ae8d918b6e85bd611117d3d9a3be4f903ee5e4 # v1.33.1

  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: stable
          cache-dependency-path: '**/go.sum'
      - id: set-modules
        run: echo modules=$(echo $(go list -m -json) | jq -s '.' | jq -c '[.[].Dir]') >> $GITHUB_OUTPUT

  tidy:
    name: Tidy
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache-dependency-path: 'go.sum'
          go-version: stable
      - name: Run tidy
        working-directory: ${{ matrix.modules }}
        run: go mod tidy --diff

  govulncheck:
    name: Go vulnerabilities check
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
        go-version: [ 1.25.2 ]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache-dependency-path: 'go.sum'
          go-version: ${{ matrix.go-version }}
      - name: Run mod vendor
        working-directory: ${{ matrix.modules }}
        run: go mod vendor
      - name: Scan for Vulnerabilities in Code
        uses: Templum/govulncheck-action@0eeca9d81f01facc00829cc99a14e44ce59ce80f # v1.0.2
        with:
          go-version: ${{ matrix.go-version }}
          vulncheck-version: ${{ env.GOVULNCHECK_VERSION }}

  golangci:
    name: Linter
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: stable
          cache-dependency-path: 'go.sum'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: ${{ env.GOLANGCI_LINT_VERSION }}

          # Optional: working directory, useful for monorepos
          # working-directory: headers
          working-directory: ${{ matrix.modules }}

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          args: --timeout=20m --output.sarif.path="${{ matrix.modules }}/results.sarif"

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

      - name: Upload linter SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@39edc492dbe16b1465b0cafca41432d857bdb31a # v3.29.1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: "${{ matrix.modules }}/results.sarif"
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: golangci-lint
